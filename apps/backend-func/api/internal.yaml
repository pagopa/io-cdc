openapi: 3.0.1
info:
  version: 0.0.1
  title: CdC Backend API
  x-logo:
    url: https://io.italia.it/assets/img/io-logo-blue.svg
  description: |
    These API serve the microfrontend related to Carta della Cultura
servers:
  - url: https://{function-instance-name}.azurewebsites.net
security:
  - ApiKeyAuth: []
paths:
  /info:
    get:
      operationId: info
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationInfo'
        '500':
          description: Internal Server error
  /fauth:
    get:
      operationId: fimsAuth
      parameters:
        - in: query
          name: device
          required: false
          schema:
            type: string
      responses:
        '301':
          description: Redirect to openid  provider
        '500':
          description: Internal Server error
  /fcb:
    get:
      operationId: fimsCallback
      parameters:
        - in: query
          name: state
          required: true
          schema:
            type: string
        - in: query
          name: code
          required: true
          schema:
            type: string
      responses:
        '301':
          description: Redirect to RP Authorize
        '500':
          description: Internal Server error
  /api/v1/authorize:
    get:
      operationId: authorize
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Session Token successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionToken'
        '500':
          description: Internal Server error
  /api/v1/requests:
    get:
      operationId: getRequest
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
      responses:
        #INSERT 200
        '500':
          description: Internal Server error
    post:
      operationId: insertRequest
      parameters:
        - in: header
          name: token
          required: true
          schema:
            type: string
      responses:
        #INSERT 200
        '500':
          description: Internal Server error
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Functions-Key
  schemas:
    InternalServerError:
      description: InternalServerError
      allOf:
        - $ref: '#/components/schemas/ProblemJson'
        - type: object
          properties:
            status:
              type: integer
              enum:
                - 500
              example: 500
              description: >-
                The HTTP status code generated by the origin server for this
                occurrence of the problem.
          required:
            - status
    BadRequest:
      description: Bad Request
      allOf:
        - $ref: '#/components/schemas/ProblemJson'
        - type: object
          properties:
            status:
              type: integer
              enum:
                - 400
              example: 400
              description: >-
                The HTTP status code generated by the origin server for this
                occurrence of the problem.
          required:
            - status
    Unauthorized:
      description: Unauthorized
      allOf:
        - $ref: '#/components/schemas/ProblemJson'
        - type: object
          properties:
            status:
              type: integer
              enum:
                - 401
              example: 401
              description: >-
                The HTTP status code generated by the origin server for this
                occurrence of the problem.
          required:
            - status
    ApplicationInfo:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
      required:
        - name
        - version
    SessionToken:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    ProblemJson:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: >-
            A short, summary of the problem type. Written in english and
            readable

            for engineers (usually not suited for non technical stakeholders and

            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 200
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
