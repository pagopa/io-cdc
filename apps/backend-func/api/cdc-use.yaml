openapi: 3.0.0
info:
  title: Carta della Cultura Usage APIs
  description: These APIs allow citizens to use their Carta della Cultura.
  version: 1.0.0
servers:
- url: https://ssotest.cartadellacultura.it/cdc/v1
tags:
- name: secured
  description: Citizen facing APIs
security:
  - JwtAuth: []
paths:
  /status:
    get:
      tags:
      - secured
      summary: Get the citizen's status about the Carta della Cultura
      operationId: getStatus
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CitizenStatus"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
  /cards:
    get:
      tags:
      - secured
      summary: Get the list of Carta della Cultura cards
      operationId: getCardsList
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardsList"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
  /vouchers:
    get:
      tags:
      - secured
      summary: Get the list of vouchers for the Carta della Cultura
      operationId: getVouchersList
      parameters:
        - name: year
          in: query
          required: false
          schema:
            type: string
          description: The year of the Carta della Cultura card to filter vouchers
      responses:
        '200':
          description: Successful response with a list of vouchers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VoucherDetails"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
    post:
      tags:
      - secured
      summary: Generate a voucher for the Carta della Cultura
      operationId: generateVoucher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VoucherRequest"
      responses:
        '200':
          description: Voucher generated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VoucherDetails"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
  /vouchers/{id}:
    get:
      tags:
      - secured
      summary: Get details of a specific voucher
      operationId: getVoucherDetails
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier of the voucher
      responses:
        '200':
          description: Successful response with voucher details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VoucherDetails"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
    delete:
      tags:
      - secured
      summary: Delete a voucher for the Carta della Cultura
      operationId: deleteVoucher
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier of the voucher to be deleted
      responses:
        '204':
          description: Voucher deleted successfully
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Internal Server Error
components:
  securitySchemes:
    JwtAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    CitizenStatus:
      type: object
      properties:
        number_of_cards:
          type: integer
          description: The number of active Carta della Cultura cards
          example: 2
        expiration_date:
          type: string
          format: date-time
          description: The expiration date of the Carta della Cultura
          example: "2026-12-31T23:59:59Z"
      required:
        - number_of_cards
        - expiration_date
    CardsList:
      type: array
      items:
        type: object
        properties:
          card_name:
            type: string
            description: Name of the Carta della Cultura card
            example: "Cultura Card 2023"
          year:
            type: string
            description: Year of the card
            example: "2023"
          status:
            type: string
            description: Status of the card (e.g., active, expired)
            enum: ["ACTIVE", "EXPIRED", "REVOKED"]
            example: "ACTIVE"
          expiration_date:
            type: string
            format: date-time
            description: Expiration date of the card
            example: "2026-12-31T23:59:59Z"
          residual_amount:
            type: number
            format: float
            description: Remaining balance on the card
            example: 50.01
        required:
          - card_name
          - year
          - status
          - expiration_date
          - residual_amount
    VoucherRequest:
      type: object
      properties:
        year:
          type: string
          description: The ID of the Carta della Cultura card
          example: "2023"
        amount:
          type: number
          format: float
          description: The amount to be loaded onto the voucher
          example: 20.00
      required:
        - year
        - amount
    VoucherDetails:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the generated voucher
          example: "1234-5678-90"
        amount:
          type: number
          format: float
          description: Amount loaded onto the voucher
          example: 20.00
        expiration_date:
          type: string
          format: date-time
          description: Expiration date of the voucher
          example: "2026-12-31T23:59:59Z"
        status:
          type: string
          description: Status of the voucher (e.g., active, used, expired)
          enum: ["PENDING", "USED", "EXPIRED", "REFUNDED"]
          example: "PENDING"
        card_year:
          type: string
          description: The year of the Carta della Cultura card associated with the voucher
          example: "2023"
        applicant:
          type: string
          description: The applicant who generated the voucher
          example: "SELF"
          enum: ["SELF", "FAMILY_MEMBER"]
        merchant:
          type: string
          description: The merchant where the voucher was used
          example: "Cultural Store"
        refund:
          type: object
          properties:
            amount:
              type: number
              format: float
              description: Amount refunded for the voucher
              example: 5.00
            status:
              type: string
              description: Status of the refund (e.g., pending, completed)
              enum: ["PENDING", "COMPLETED", "FAILED"]
              example: "COMPLETED"
      required:
        - id
        - amount
        - expiration_date
        - status
        - card_year
        - applicant